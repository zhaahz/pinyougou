<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd
http://code.alibabatech.com/schema/dubbo
http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
     <!--配置加载属性文件-->
    <context:property-placeholder
            location="classpath*:props/*.properties"/>

    <!--6.1 导入mapper层的applicationContext-mybatis.xml文件;把applicationContext-mybatis.xml
    放到mapper层去写,是因为服务如果在服务层写的话,每个服务都要写一个applicationContext-mybatis.xml-->
    <!-- 导入数据访问配置文件 -->
    <import resource="classpath:applicationContext-mapper.xml"/>


    <!-- ############## 配置 dubbo 服务提供者 ############## -->
    <!-- 配置当前应用的名称 -->
    <dubbo:application name="pinyougou-sellergoods-service"/>
    <!-- 配置 zookeeper 作为注册中心，暴露(注册)服务地址 -->
    <dubbo:registry protocol="zookeeper" address="192.168.12.131:2181"/>
    <!-- 用 dubbo 协议在 20880 端口暴露服务 -->

    <!--7.1 笔记:这个端口号随便取的,就这样就行,谐音阿里巴巴-->
    <dubbo:protocol name="dubbo" port="20880"/>


    <!--7.2 笔记 配置采用包扫描来暴露服务 -->
    <dubbo:annotation package="com.pinyougou.sellergoods.service.impl"/>
    <!--&lt;!&ndash; 和本地bean一样实现服务&ndash;&gt;-->
    <!--<bean id="demoService" class="com.pinyougou.sellergoods.service.impl.BrandServiceImpl"/>-->

</beans>